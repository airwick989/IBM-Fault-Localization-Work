#!/bin/bash

#----------------------------------------------------------------------------
#
#   IBM Performance Inspector
#   Copyright (c) International Business Machines Corp., 2003 - 2009
#
#   This script is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public
#   License as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Foundation,
#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#----------------------------------------------------------------------------

# Usage  ./setrunenv [nodrvload | force | lib32]
# setrunenv will set all the appropriate paths to run performance inspector.
# 
# The 'nodrvload' option tells setrunenv not to load the kernel module
# This is most useful for the install scripts, default is to load the module.
# but only if it's not already loaded.
#
# The 'force' option will unload a previously loaded driver before loading a new
# one. This is intended for driver developers.
#
# The 'lib32' option adds first lib, then lib64 to the LD_LIBRARY_PATH.
# (default order is lib64, lib)
# This is needed ONLY if you use jperf API from 32-bit java on 64-bit system,
# so that System.loadLibrary can find the correct libjperf.so
# 

# $1 is the absolute path name of the directory you want to query for
# $2 is variable of full path name colon separated directories such as
# PATH or CLASSPATH you want to query
# exit status 0 indicates that the queried path name was in the variable	
dir_in_path_var()
{
	local dir
	local IFS=:

	for  dir in $2
	do
		if [ -d "${dir}" ]; then
			if [ ${1} = ${dir} ]; then
				return 0
			fi
		fi
	done
	return 1
}

# $1 is the absolute path name of the directory you want to query for
# $2 is variable of full path name colon separated directories such as
# PATH or CLASSPATH you want to query
# exit status 0 indicates that the queried path name was first in the variable	
first_dir_in_path_var()
{
	local dir
	local IFS=:
	local first=0

	for  dir in $2
	do	
		if [ "$first" = "0" ]; then
			if [ -d "${dir}" ]; then
				if [ ${1} = ${dir} ]; then
					return 0
				fi
			fi	
		else
			return 1
		fi
		first=1
	done
	return 1
}

# $1 is the absolute path name we want to prepend to the PATH variable
# iff $1 is not already in $PATH
prepend_to_path()
{
	# Exit from function if first parameter is not a directory
	if [ ! -d "${1}" ]; then
		return 1
	fi

	if ! dir_in_path_var $1 $PATH ; then
		export PATH="${1}${PATH:+:$PATH}"
	fi
}

# $1 is the absolute path name we want to prepend to the CLASSPATH variable
# iff $1 is not already in $CLASSPATH
prepend_to_classpath()
{
	# Exit from function if first parameter is not a directory
	if [ ! -d "${1}" ]; then
		return 1
	fi

	if ! dir_in_path_var $1 $CLASSPATH ; then
		export CLASSPATH="${1}${CLASSPATH:+:$CLASSPATH}"
	fi
}

# $1 is the full path name we want to prepend to the LD_LIBRARY_PATH variable
# iff $1 is not already first in $LD_LIBRARY_PATH
prepend_to_ld_library_path()
{
	# Exit from function if first parameter is not a directory
	if [ ! -d "${1}" ]; then
		return 1
	fi

	if ! first_dir_in_path_var $1 $LD_LIBRARY_PATH ; then
		export LD_LIBRARY_PATH="${1}${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
	fi
}

# $1 is the full path name we want to append to the LD_LIBRARY_PATH variable
# iff $1 is not already in $LD_LIBRARY_PATH
append_to_ld_library_path()
{
	# Exit from function if first parameter is not a directory
	if [ ! -d "${1}" ]; then
		return 1
	fi

	if ! dir_in_path_var $1 $LD_LIBRARY_PATH ; then
		export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}${1}"
	fi
}

# path variables
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
export PERFBIN=$SCRIPTPATH
export PERFDIR="$(dirname "${PERFBIN}")"
export PERFLIB=${PERFDIR}/lib
echo Adding to path: ${PERFBIN}
prepend_to_path ${PERFBIN}
echo Adding to ld library path: ${PERFLIB}
prepend_to_ld_library_path ${PERFLIB}

echo "Paths have been updated. Performance Inspector ready for processing."
