looking:Reader.doRunLoop
Reader	doRunLoop
-----------------------
private synchronized void doRunLoop() {
    while (running) {
        try {
            // Consume as many connections as currently queued to avoid
            // unbridled acceptance of connections that starves the select
            int size = pendingConnections.size();
            for (int i = size; i > 0; i--) {
                SimpleServerRpcConnection conn = pendingConnections.take();
                conn.channel.register(readSelector, SelectionKey.OP_READ, conn);
            }
            readSelector.select();
            Iterator<SelectionKey> iter = readSelector.selectedKeys().iterator();
            while (iter.hasNext()) {
                SelectionKey key = iter.next();
                iter.remove();
                if (key.isValid()) {
                    if (key.isReadable()) {
                        doRead(key);
                    }
                }
                key = null;
            }
        } catch (InterruptedException e) {
            if (running) {
                // unexpected -- log it
                LOG.info(Thread.currentThread().getName() + " unexpectedly interrupted", e);
            }
        } catch (CancelledKeyException e) {
            LOG.error(getName() + ": CancelledKeyException in Reader", e);
        } catch (IOException ex) {
            LOG.info(getName() + ": IOException in Reader", ex);
        }
    }
}
-----------------------
private synchronized void doRunLoop() {
    while (running) {
        try {
            // Consume as many connections as currently queued to avoid
            // unbridled acceptance of connections that starves the select
            int size = pendingConnections.size();
            for (int i = size; i > 0; i--) {
                SimpleServerRpcConnection conn = pendingConnections.take();
                conn.channel.register(readSelector, SelectionKey.OP_READ, conn);
            }
            readSelector.select();
            Iterator<SelectionKey> iter = readSelector.selectedKeys().iterator();
            while (iter.hasNext()) {
                SelectionKey key = iter.next();
                iter.remove();
                if (key.isValid()) {
                    if (key.isReadable()) {
                        doRead(key);
                    }
                }
                key = null;
            }
        } catch (InterruptedException e) {
            if (running) {
                // unexpected -- log it
                LOG.info(Thread.currentThread().getName() + " unexpectedly interrupted", e);
            }
        } catch (CancelledKeyException e) {
            LOG.error(getName() + ": CancelledKeyException in Reader", e);
        } catch (IOException ex) {
            LOG.info(getName() + ": IOException in Reader", ex);
        }
    }
}-----------------------
possible Hot1
possible type Hot3_2
2
