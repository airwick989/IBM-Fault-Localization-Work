looking:CompactSplit.requestSplit
CompactSplit	requestSplit
-----------------------
/*
   * The User parameter allows the split thread to assume the correct user identity
   */
private synchronized void requestSplit(final Region r, byte[] midKey, User user) {
    if (midKey == null) {
        LOG.debug("Region " + r.getRegionInfo().getRegionNameAsString() + " not splittable because midkey=null");
        return;
    }
    try {
        this.splits.execute(new SplitRequest(r, midKey, this.server, user));
        if (LOG.isDebugEnabled()) {
            LOG.debug("Splitting " + r + ", " + this);
        }
    } catch (RejectedExecutionException ree) {
        LOG.info("Could not execute split for " + r, ree);
    }
}
-----------------------
/*
   * The User parameter allows the split thread to assume the correct user identity
   */
private synchronized void requestSplit(final Region r, byte[] midKey, User user) {
    if (midKey == null) {
        LOG.debug("Region " + r.getRegionInfo().getRegionNameAsString() + " not splittable because midkey=null");
        return;
    }
    try {
        this.splits.execute(new SplitRequest(r, midKey, this.server, user));
        if (LOG.isDebugEnabled()) {
            LOG.debug("Splitting " + r + ", " + this);
        }
    } catch (RejectedExecutionException ree) {
        LOG.info("Could not execute split for " + r, ree);
    }
}-----------------------
possible Hot2
