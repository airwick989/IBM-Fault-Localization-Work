looking:RegionScannerImpl.reseek
RegionScannerImpl	reseek
-----------------------
@Override
public synchronized boolean reseek(byte[] row) throws IOException {
    return TraceUtil.trace(() -> {
        if (row == null) {
            throw new IllegalArgumentException("Row cannot be null.");
        }
        boolean result = false;
        region.startRegionOperation();
        Cell kv = PrivateCellUtil.createFirstOnRow(row, 0, (short) row.length);
        try {
            // use request seek to make use of the lazy seek option. See HBASE-5520
            result = this.storeHeap.requestSeek(kv, true, true);
            if (this.joinedHeap != null) {
                result = this.joinedHeap.requestSeek(kv, true, true) || result;
            }
        } finally {
            region.closeRegionOperation();
        }
        return result;
    }, () -> region.createRegionSpan("RegionScanner.reseek"));
}
-----------------------
@Override
public synchronized boolean reseek(byte[] row) throws IOException {
    return TraceUtil.trace(() -> {
        if (row == null) {
            throw new IllegalArgumentException("Row cannot be null.");
        }
        boolean result = false;
        region.startRegionOperation();
        Cell kv = PrivateCellUtil.createFirstOnRow(row, 0, (short) row.length);
        try {
            // use request seek to make use of the lazy seek option. See HBASE-5520
            result = this.storeHeap.requestSeek(kv, true, true);
            if (this.joinedHeap != null) {
                result = this.joinedHeap.requestSeek(kv, true, true) || result;
            }
        } finally {
            region.closeRegionOperation();
        }
        return result;
    }, () -> region.createRegionSpan("RegionScanner.reseek"));
}-----------------------
possible Hot1
