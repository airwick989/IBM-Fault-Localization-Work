looking:MonitoredRPCHandlerImpl.getRPC
MonitoredRPCHandlerImpl	getRPC
-----------------------
/**
 * Produces a string representation of the method currently being serviced by this Handler.
 * @param withParams toggle inclusion of parameters in the RPC String
 * @return A human-readable string representation of the method call.
 */
@Override
public synchronized String getRPC(boolean withParams) {
    if (getState() != State.RUNNING) {
        // no RPC is currently running
        return "";
    }
    StringBuilder buffer = new StringBuilder(256);
    buffer.append(methodName);
    if (withParams) {
        buffer.append("(");
        for (int i = 0; i < params.length; i++) {
            if (i != 0)
                buffer.append(", ");
            buffer.append(params[i]);
        }
        buffer.append(")");
    }
    return buffer.toString();
}
-----------------------
/**
 * Produces a string representation of the method currently being serviced by this Handler.
 * @param withParams toggle inclusion of parameters in the RPC String
 * @return A human-readable string representation of the method call.
 */
@Override
public synchronized String getRPC(boolean withParams) {
    if (getState() != State.RUNNING) {
        // no RPC is currently running
        return "";
    }
    StringBuilder buffer = new StringBuilder(256);
    buffer.append(methodName);
    if (withParams) {
        buffer.append("(");
        for (int i = 0; i < params.length; i++) {
            if (i != 0)
                buffer.append(", ");
            buffer.append(params[i]);
        }
        buffer.append(")");
    }
    return buffer.toString();
    {
        if (getState() != State.RUNNING) {
            return super.toString();
        }
        return super.toString() + ", queuetimems=" + getRPCQueueTime() + ", starttimems=" + getRPCStartTime() + ", clientaddress=" + clientAddress + ", remoteport=" + remotePort + ", packetlength=" + getRPCPacketLength() + ", rpcMethod=" + getRPC();
    }
}-----------------------
possible Hot2
possible type Hot3_2
1
