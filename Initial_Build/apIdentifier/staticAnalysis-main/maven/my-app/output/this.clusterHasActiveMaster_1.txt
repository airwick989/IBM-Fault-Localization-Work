looking:this.clusterHasActiveMaster
ActiveMasterManager	blockUntilBecomingActiveMaster
-----------------------
synchronized (this.clusterHasActiveMaster) {
    while (clusterHasActiveMaster.get() && !master.isStopped()) {
        try {
            clusterHasActiveMaster.wait(checkInterval);
        } catch (InterruptedException e) {
            // We expect to be interrupted when a master dies,
            // will fall out if so
            LOG.debug("Interrupted waiting for master to die", e);
        }
    }
    if (clusterShutDown.get()) {
        this.master.stop("Cluster went down before this master became active");
    }
}
-----------------------
synchronized (this.clusterHasActiveMaster) {
    while (clusterHasActiveMaster.get() && !master.isStopped()) {
        try {
            clusterHasActiveMaster.wait(checkInterval);
        } catch (InterruptedException e) {
            // We expect to be interrupted when a master dies,
            // will fall out if so
            LOG.debug("Interrupted waiting for master to die", e);
        }
    }
    if (clusterShutDown.get()) {
        this.master.stop("Cluster went down before this master became active");
    }
}-----------------------
possible Hot2
possible type Hot3_2
1
