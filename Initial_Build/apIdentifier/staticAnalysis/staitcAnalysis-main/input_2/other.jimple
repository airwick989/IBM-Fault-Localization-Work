class other extends java.lang.Object
{
    public static java.lang.Object lock_1;
    public static java.lang.Object lock_2;
    public static java.lang.Object lock_3;

    void <init>()
    {
        other r0;

        r0 := @this: other;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void A(int)
    {
        java.io.PrintStream $r3;
        java.lang.Throwable $r4, $r5, $r6;
        other r7;
        int i0;
        java.lang.Object $r0, $r1, $r2;

        r7 := @this: other;

        i0 := @parameter0: int;

        $r0 = <other: java.lang.Object lock_1>;

        entermonitor $r0;

     label01:
        $r1 = <other: java.lang.Object lock_2>;

        entermonitor $r1;

     label02:
        $r2 = <other: java.lang.Object lock_3>;

        entermonitor $r2;

     label03:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(int)>(i0);

        exitmonitor $r2;

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label06:
        throw $r6;

     label07:
        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r5;

     label11:
        exitmonitor $r0;

     label12:
        goto label15;

     label13:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label14:
        throw $r4;

     label15:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public synchronized void B()
    {
        int i0;
        other r0;

        r0 := @this: other;

        i0 = 0;

     label1:
        if i0 >= 100 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1, $r2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <other: java.lang.Object lock_1> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <other: java.lang.Object lock_2> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <other: java.lang.Object lock_3> = $r2;

        return;
    }
}
