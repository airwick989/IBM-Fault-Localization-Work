looking:flushLock
// list of store files. Add cleanup of anything put on filesystem if we fail.
synchronized (flushLock) {
    status.setStatus("Flushing " + store + ": creating writer");
    // Write the map out to the disk
    writer = createWriter(snapshot, false, writerCreationTracker);
    IOException e = null;
    try {
        performFlush(scanner, writer, throughputController);
    } catch (IOException ioe) {
        e = ioe;
        // throw the exception out
        throw ioe;
    } finally {
        if (e != null) {
            writer.close();
        } else {
            finalizeWriter(writer, cacheFlushId, status);
        }
    }
}

// TODO: We can fail in the below block before we complete adding this flush to
// list of store files. Add cleanup of anything put on filesystem if we fail.
synchronized (flushLock) {
    status.setStatus("Flushing " + store + ": creating writer");
    // Write the map out to the disk
    writer = createWriter(snapshot, false, writerCreationTracker);
    IOException e = null;
    try {
        performFlush(scanner, writer, throughputController);
    } catch (IOException ioe) {
        e = ioe;
        // throw the exception out
        throw ioe;
    } finally {
        if (e != null) {
            writer.close();
        } else {
            finalizeWriter(writer, cacheFlushId, status);
        }
    }
}
possible Hot2
