looking:AbstractWALRoller.run
synchronized (this) {
    if (wals.values().stream().noneMatch(rc -> rc.needsRoll(now))) {
        try {
            wait(this.threadWakeFrequency);
        } catch (InterruptedException e) {
            // restore the interrupt state
            Thread.currentThread().interrupt();
        }
        // goto the beginning to check whether again whether we should fall through to roll
        // several WALs, and also check whether we should quit.
        continue;
    }
}

synchronized (this) {
    if (wals.values().stream().noneMatch(rc -> rc.needsRoll(now))) {
        try {
            wait(this.threadWakeFrequency);
        } catch (InterruptedException e) {
            // restore the interrupt state
            Thread.currentThread().interrupt();
        }
        // goto the beginning to check whether again whether we should fall through to roll
        // several WALs, and also check whether we should quit.
        continue;
    }
}
possible Hot1
