looking:ZKSecretWatcher.refreshKeys
/**
 * refresh keys
 */
synchronized void refreshKeys() {
    try {
        List<ZKUtil.NodeAndData> nodes = ZKUtil.getChildDataAndWatchForNewChildren(watcher, keysParentZNode);
        {
            for (ZKUtil.NodeAndData n : nodes) {
                String path = n.getNode();
                String keyId = ZKUtil.getNodeName(path);
                try {
                    byte[] data = n.getData();
                    if (data == null || data.length == 0) {
                        LOG.debug("Ignoring empty node " + path);
                        continue;
                    }
                    AuthenticationKey key = (AuthenticationKey) Writables.getWritable(data, new AuthenticationKey());
                    secretManager.addKey(key);
                } catch (IOException ioe) {
                    LOG.error(HBaseMarkers.FATAL, "Failed reading new secret key for id '" + keyId + "' from zk", ioe);
                    watcher.abort("Error deserializing key from znode " + path, ioe);
                }
            }
        }
    } catch (KeeperException ke) {
        LOG.error(HBaseMarkers.FATAL, "Error reading data from zookeeper", ke);
        watcher.abort("Error reading changed keys from zookeeper", ke);
    }
}

/**
 * refresh keys
 */
synchronized void refreshKeys() {
    try {
        List<ZKUtil.NodeAndData> nodes = ZKUtil.getChildDataAndWatchForNewChildren(watcher, keysParentZNode);
        refreshNodes(nodes);
    } catch (KeeperException ke) {
        LOG.error(HBaseMarkers.FATAL, "Error reading data from zookeeper", ke);
        watcher.abort("Error reading changed keys from zookeeper", ke);
    }
}
possible Hot1
possible type Hot3_2
1
