looking:DeadServer.copyDeadServersSince
DeadServer	copyDeadServersSince
-----------------------
/**
 * Extract all the servers dead since a given time, and sort them.
 * @param ts the time, 0 for all
 * @return a sorted array list, by death time, lowest values first.
 */
synchronized List<Pair<ServerName, Long>> copyDeadServersSince(long ts) {
    List<Pair<ServerName, Long>> res = new ArrayList<>(size());
    for (Map.Entry<ServerName, Long> entry : deadServers.entrySet()) {
        if (entry.getValue() >= ts) {
            res.add(new Pair<>(entry.getKey(), entry.getValue()));
        }
    }
    Collections.sort(res, (o1, o2) -> o1.getSecond().compareTo(o2.getSecond()));
    return res;
}
-----------------------
/**
 * Extract all the servers dead since a given time, and sort them.
 * @param ts the time, 0 for all
 * @return a sorted array list, by death time, lowest values first.
 */
synchronized List<Pair<ServerName, Long>> copyDeadServersSince(long ts) {
    List<Pair<ServerName, Long>> res = new ArrayList<>(size());
    for (Map.Entry<ServerName, Long> entry : deadServers.entrySet()) {
        if (entry.getValue() >= ts) {
            res.add(new Pair<>(entry.getKey(), entry.getValue()));
        }
    }
    Collections.sort(res, (o1, o2) -> o1.getSecond().compareTo(o2.getSecond()));
    return res;
}-----------------------
possible Hot1
possible type Hot3_2
1
