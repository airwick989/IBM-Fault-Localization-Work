looking:WorkerAssigner.acquire
WorkerAssigner	acquire
-----------------------
public synchronized Optional<ServerName> acquire() {
    List<ServerName> serverList = master.getServerManager().getOnlineServersList();
    Collections.shuffle(serverList);
    Optional<ServerName> worker = serverList.stream().filter(serverName -> !currentWorkers.containsKey(serverName) || currentWorkers.get(serverName) > 0).findAny();
    worker.ifPresent(name -> currentWorkers.compute(name, (serverName, availableWorker) -> availableWorker == null ? maxTasks - 1 : availableWorker - 1));
    return worker;
}
-----------------------
public synchronized Optional<ServerName> acquire() {
    List<ServerName> serverList = master.getServerManager().getOnlineServersList();
    Collections.shuffle(serverList);
    Optional<ServerName> worker = serverList.stream().filter(serverName -> !currentWorkers.containsKey(serverName) || currentWorkers.get(serverName) > 0).findAny();
    worker.ifPresent(name -> currentWorkers.compute(name, (serverName, availableWorker) -> availableWorker == null ? maxTasks - 1 : availableWorker - 1));
    return worker;
}-----------------------
possible Hot1
