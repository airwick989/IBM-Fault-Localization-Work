looking:RateLimiter.consume
RateLimiter	consume
-----------------------
/**
 * consume amount available units, amount could be a negative number
 * @param amount the number of units to consume
 */
public synchronized void consume(final long amount) {
    if (isBypass()) {
        return;
    }
    if (amount >= 0) {
        this.avail -= amount;
        if (this.avail < 0) {
            this.avail = 0;
        }
    } else {
        if (this.avail <= Long.MAX_VALUE + amount) {
            this.avail -= amount;
            this.avail = Math.min(this.avail, this.limit);
        } else {
            this.avail = this.limit;
        }
    }
}
-----------------------
/**
 * consume amount available units, amount could be a negative number
 * @param amount the number of units to consume
 */
public synchronized void consume(final long amount) {
    if (isBypass()) {
        return;
    }
    if (amount >= 0) {
        this.avail -= amount;
        if (this.avail < 0) {
            this.avail = 0;
        }
    } else {
        if (this.avail <= Long.MAX_VALUE + amount) {
            this.avail -= amount;
            this.avail = Math.min(this.avail, this.limit);
        } else {
            this.avail = this.limit;
        }
    }
    {
        return getLimit() == Long.MAX_VALUE;
    }
}-----------------------
possible Hot1
