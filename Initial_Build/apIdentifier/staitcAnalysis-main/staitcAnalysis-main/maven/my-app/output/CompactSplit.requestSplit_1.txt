looking:CompactSplit.requestSplit
CompactSplit	requestSplit
-----------------------
private synchronized void requestSplit(final Region r, byte[] midKey) {
    requestSplit(r, midKey, null);
}
-----------------------
private synchronized void requestSplit(final Region r, byte[] midKey) {
    requestSplit(r, midKey, null);
    {
        // Don't split regions that are blocking is the default behavior.
        // But in some circumstances, split here is needed to prevent the region size from
        // continuously growing, as well as the number of store files, see HBASE-26242.
        HRegion hr = (HRegion) r;
        try {
            if (shouldSplitRegion() && hr.getCompactPriority() >= PRIORITY_USER) {
                byte[] midKey = hr.checkSplit().orElse(null);
                if (midKey != null) {
                    requestSplit(r, midKey);
                    return true;
                }
            }
        } catch (IndexOutOfBoundsException e) {
            // We get this sometimes. Not sure why. Catch and return false; no split request.
            LOG.warn("Catching out-of-bounds; region={}, policy={}", hr == null ? null : hr.getRegionInfo(), hr == null ? "null" : hr.getCompactPriority(), e);
        }
        return false;
    }
}-----------------------
possible Hot2
