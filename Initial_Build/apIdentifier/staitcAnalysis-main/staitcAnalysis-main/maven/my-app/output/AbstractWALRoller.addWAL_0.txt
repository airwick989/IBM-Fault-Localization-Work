looking:AbstractWALRoller.addWAL
AbstractWALRoller	addWAL
-----------------------
// this is to avoid race between addWAL and requestRollAll.
synchronized (this) {
    if (wals.putIfAbsent(wal, new RollController(wal)) == null) {
        wal.registerWALActionsListener(new WALActionsListener() {

            @Override
            public void logRollRequested(WALActionsListener.RollRequestReason reason) {
                // TODO logs will contend with each other here, replace with e.g. DelayedQueue
                synchronized (AbstractWALRoller.this) {
                    RollController controller = wals.computeIfAbsent(wal, rc -> new RollController(wal));
                    controller.requestRoll();
                    AbstractWALRoller.this.notifyAll();
                }
            }

            @Override
            public void postLogArchive(Path oldPath, Path newPath) throws IOException {
                afterWALArchive(oldPath, newPath);
            }
        });
    }
}
-----------------------
// this is to avoid race between addWAL and requestRollAll.
synchronized (this) {
    if (wals.putIfAbsent(wal, new RollController(wal)) == null) {
        wal.registerWALActionsListener(new WALActionsListener() {

            @Override
            public void logRollRequested(WALActionsListener.RollRequestReason reason) {
                // TODO logs will contend with each other here, replace with e.g. DelayedQueue
                synchronized (AbstractWALRoller.this) {
                    RollController controller = wals.computeIfAbsent(wal, rc -> new RollController(wal));
                    controller.requestRoll();
                    AbstractWALRoller.this.notifyAll();
                    {
                        this.rollRequest.set(true);
                    }
                    {
                        this.rollRequest.set(true);
                    }
                }
            }

            @Override
            public void postLogArchive(Path oldPath, Path newPath) throws IOException {
                afterWALArchive(oldPath, newPath);
                {
                }
            }
        });
    }
}-----------------------
possible Hot1
